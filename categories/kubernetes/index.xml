<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Maruf&#39;s</title>
    <link>https://maruftuhin.com/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Maruf&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Abdullah Al Maruf</copyright>
    <lastBuildDate>Sun, 03 Mar 2019 00:15:10 +0600</lastBuildDate>
    
	<atom:link href="https://maruftuhin.com/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Kubectl Cheat Sheet</title>
      <link>https://maruftuhin.com/blog/kubernetes-cheatsheet/</link>
      <pubDate>Sun, 03 Mar 2019 00:15:10 +0600</pubDate>
      
      <guid>https://maruftuhin.com/blog/kubernetes-cheatsheet/</guid>
      <description>Kubectl Cheat Sheet &amp;gt; minikube version &amp;gt; minikube start &amp;gt; kubectl version &amp;gt; kubectl get nodes  Run app in kubernetes Run app in kubernetes by kubectl
&amp;gt; kubectl run kubernetes-bootcamp --image=docker.io/jocatalin/kubernetes-bootcamp:v1 --port=8080  also run GRPS_Sample //problematic
&amp;gt; kubectl run kubernetes-grpc-sample --image=maruftuhin/server_grpc_sample --port=8088  See deployments
&amp;gt; kubectl get deployments  run proxy and echo
&amp;gt; kubectl proxy  setting up POD_NAME variable
&amp;gt; export POD_NAME=$(kubectl get pods -o go-template --template &#39;{{range .</description>
    </item>
    
    <item>
      <title>My Docker Cheat Sheet</title>
      <link>https://maruftuhin.com/blog/docker-cheatsheet/</link>
      <pubDate>Fri, 01 Mar 2019 04:05:30 +0600</pubDate>
      
      <guid>https://maruftuhin.com/blog/docker-cheatsheet/</guid>
      <description>Docker Cheat Sheet Build and run a docker image Build docker images from docker file, goto dockerfile directory and command:
docker build -t friendlynginx .  Run docker image from locally built image
docker run -d -p 50053:8088 friendlynginx # -d for running it in background //50053:8088 is the exposed port  Connect with docker hub and push to directory, a directory maruftuhin/nginx is created i docker hub at first, then login</description>
    </item>
    
    <item>
      <title>Mongodb Replica Set on Kubernetes</title>
      <link>https://maruftuhin.com/blog/mongodb-on-kubernetes/</link>
      <pubDate>Sat, 12 Jan 2019 03:07:50 +0600</pubDate>
      
      <guid>https://maruftuhin.com/blog/mongodb-on-kubernetes/</guid>
      <description>Replica-Sets Create Secret for Key file MongoDB will use this key to communicate internal cluster.
$ openssl rand -base64 741 &amp;gt; ./replica-sets/key.txt $ kubectl create secret generic shared-bootstrap-data --from-file=internal-auth-mongodb-keyfile=./replica-sets/key.txt secret &amp;quot;shared-bootstrap-data&amp;quot; created  Deploy MongoDB Replica-Sets YAML apiVersion: v1 kind: Service metadata: name: mongodb-service labels: name: mongo spec: ports: - port: 27017 targetPort: 27017 clusterIP: None selector: role: mongo --- apiVersion: apps/v1 kind: StatefulSet metadata: name: mongod spec: serviceName: mongodb-service replicas: 3 selector: matchLabels: role: mongo environment: test replicaset: MainRepSet template: metadata: labels: role: mongo environment: test replicaset: MainRepSet spec: containers: - name: mongod-container image: mongo:3.</description>
    </item>
    
  </channel>
</rss>