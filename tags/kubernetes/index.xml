<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Maruf&#39;s</title>
    <link>https://maruftuhin.com/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Maruf&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Wed, 27 Feb 2019 03:00:07 +0600</lastBuildDate>
    
	<atom:link href="https://maruftuhin.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Appscode/Analytics</title>
      <link>https://maruftuhin.com/project/appscode_analytics/</link>
      <pubDate>Wed, 27 Feb 2019 03:00:07 +0600</pubDate>
      
      <guid>https://maruftuhin.com/project/appscode_analytics/</guid>
      <description> Worked with docker-hub APIs to collect analytic data. Stored analytical datas in Google sheets using GO client. Used pixel tracking [aka, web beacon] to event each view of GitHub or other web pages in real time.  </description>
    </item>
    
    <item>
      <title>KubeDB</title>
      <link>https://maruftuhin.com/project/kubedb/</link>
      <pubDate>Mon, 11 Feb 2019 03:06:15 +0600</pubDate>
      
      <guid>https://maruftuhin.com/project/kubedb/</guid>
      <description>A tool to automate database deploy on Kubernetes using CRD. It also takes scheduled backup of databases.
 Acted as KubeDB project head for more than a year. Conducted Bi-Weekly KubeDB Community meetings regularly. Added MongoDB, MySQL, Redis and Memcached support to KubeDB. Added MongoDB clustering system. Also, worked on PostgreSQL and Elasticsearch clustering. Worked with prometheus exporter to export database metrics.  </description>
    </item>
    
    <item>
      <title>Mongodb Replica Set on Kubernetes</title>
      <link>https://maruftuhin.com/blog/mongodb-on-kubernetes/</link>
      <pubDate>Sat, 12 Jan 2019 03:07:50 +0600</pubDate>
      
      <guid>https://maruftuhin.com/blog/mongodb-on-kubernetes/</guid>
      <description>Replica-Sets Create Secret for Key file MongoDB will use this key to communicate internal cluster.
$ openssl rand -base64 741 &amp;gt; ./replica-sets/key.txt $ kubectl create secret generic shared-bootstrap-data --from-file=internal-auth-mongodb-keyfile=./replica-sets/key.txt secret &amp;quot;shared-bootstrap-data&amp;quot; created  Deploy MongoDB Replica-Sets YAML apiVersion: v1 kind: Service metadata: name: mongodb-service labels: name: mongo spec: ports: - port: 27017 targetPort: 27017 clusterIP: None selector: role: mongo --- apiVersion: apps/v1 kind: StatefulSet metadata: name: mongod spec: serviceName: mongodb-service replicas: 3 selector: matchLabels: role: mongo environment: test replicaset: MainRepSet template: metadata: labels: role: mongo environment: test replicaset: MainRepSet spec: containers: - name: mongod-container image: mongo:3.</description>
    </item>
    
  </channel>
</rss>