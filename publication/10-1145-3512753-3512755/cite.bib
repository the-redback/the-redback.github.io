@article{10.1145/3512753.3512755,
 abstract = {Poor design choices, bad coding practices, or the need to produce software quickly can stand behind technical debt. Unfortunately, manually identifying and managing technical debt gets more difficult as the software matures. Recent research offers various techniques to automate the process of detecting and managing technical debt to address these challenges. This manuscript presents a mapping study of the many aspects of technical debt that have been discovered in this field of study. This includes looking at the various forms of technical debt, as well as detection methods, the financial implications, and mitigation strategies. The findings and outcomes of this study are applicable to a wide range of software development life-cycle decisions.},
 address = {New York, NY, USA},
 author = {Das, Dipta and Maruf, Abdullah Al and Islam, Rofiqul and Lambaria, Noah and Kim, Samuel and Abdelfattah, Amr S. and Cerny, Tomas and Frajtak, Karel and Bures, Miroslav and Tisnovsky, Pavel},
 doi = {10.1145/3512753.3512755},
 issn = {1559-6915},
 issue_date = {December 2021},
 journal = {SIGAPP Appl. Comput. Rev.},
 keywords = {code debt, code smells, architectural degradation, technical debt, architectural debt, design debt},
 month = {jan},
 number = {4},
 numpages = {17},
 pages = {20â€“36},
 publisher = {Association for Computing Machinery},
 title = {Technical Debt Resulting from Architectural Degradation and Code Smells: A Systematic Mapping Study},
 url = {https://doi.org/10.1145/3512753.3512755},
 volume = {21},
 year = {2022}
}

