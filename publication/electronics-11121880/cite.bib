@article{electronics11121880,
 abstract = {One of the most significant impediments to the long-term maintainability of software applications is code smells. Keeping up with the best coding practices can be difficult for software developers, which might lead to performance throttling or code maintenance concerns. As a result, it is imperative that large applications be regularly monitored for performance issues and code smells, so that these issues can be corrected promptly. Resolving code smells in software systems can be done in a variety of ways, but doing so all at once would be prohibitively expensive and can be out of budget. Prioritizing these solutions are therefore critical. The majority of current research prioritizes code smells according to the type of smell they cause. This method, however, is not sufficient because of a lack of knowledge regarding the frequency of code usage and code changeability behavior. Even the most complex programs have some components that are more important than others. Maintaining the functionality of certain parts is essential since they are often used. Identifying and correcting code smells in places that are frequently utilized and subject to rapid change should take precedence over other code smells. A novel strategy is proposed for finding frequently used and change-prone areas in a codebase by combining business logic, heat map information, and commit history analysis in this study. It examines the codebase, commits, and log files of Java applications to identify business processes, heat map graphs, and severity levels of various types of code smells and their commit history. This is done in order to present a comprehensive, efficient, and resource-friendly technique for identifying and prioritizing performance throttling with also handling code maintenance concerns.},
 article-number = {1880},
 author = {Islam, Md Rofiqul and Al Maruf, Abdullah and Cerny, Tomas},
 doi = {10.3390/electronics11121880},
 issn = {2079-9292},
 journal = {Electronics},
 month = {June},
 number = {12},
 title = {Code Smell Prioritization with Business Process Mining and Static Code Analysis: A Case Study},
 url = {https://www.mdpi.com/2079-9292/11/12/1880},
 volume = {11},
 year = {2022}
}

